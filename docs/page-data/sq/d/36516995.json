{"data":{"allAuthor":{"nodes":[{"id":"b2d942e1-f621-5f11-8566-c09d46bdd4f5","name":"袁官东","slug":"/authors/","avatar":{"publicURL":"/static/4234eb7412ab4c9465ac1d2e95c35dfd/ygd.png"}}]},"allArticle":{"edges":[{"node":{"date":"2021-09-01","excerpt":"react-legacy-concurrent","hero":{"relativeDirectory":"react/legacy-concurrent","publicURL":"/static/4dd7b981e32bcd739f4bde0d13ca8c32/hero.jpg","full":{"fluid":{"src":"/static/4dd7b981e32bcd739f4bde0d13ca8c32/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/react-legacy-concurrent","title":"legacy和concurrent模式","timeToRead":1}},{"node":{"date":"2021-09-01","excerpt":"总体 react 的核心可以用 ui=fn(state)来表示 Scheduler（调度器）： 排序优先级，让优先级高的任务先进行 reconcile Reconciler（协调器）： 找出哪些节点发生了改变，并打上不同的 Flags（旧版本 react 叫 Tag…","hero":{"relativeDirectory":"react/concept","publicURL":"/static/e85e2841ca0be8271ea4c0d2e96ab202/hero.webp","full":{"fluid":{"src":"/static/e85e2841ca0be8271ea4c0d2e96ab202/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/react-concept","title":"react架构","timeToRead":1}},{"node":{"date":"2021-09-01","excerpt":"为什么要有jsx,为什么会有虚拟bom","hero":{"relativeDirectory":"react/jsx-api","publicURL":"/static/fe204488caa04fd676bea765f3e4ee8c/hero.jpg","full":{"fluid":{"src":"/static/fe204488caa04fd676bea765f3e4ee8c/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/react-jsx-api","title":"react核心api和jsx","timeToRead":1}},{"node":{"date":"2021-08-31","excerpt":"react-setstate-usestate","hero":{"relativeDirectory":"react/setstate-usestate","publicURL":"/static/7c76220cf85925de4cf9cdcca2944a7e/hero.webp","full":{"fluid":{"src":"/static/7c76220cf85925de4cf9cdcca2944a7e/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/react-setstate-usestate","title":"setState是同步的还是异步的","timeToRead":1}},{"node":{"date":"2021-08-17","excerpt":"如何使用NodeJs创建HTTP服务？","hero":{"relativeDirectory":"nodejs/httpserver","publicURL":"/static/45a88f20b208d17dd048a6a13f8ab8db/hero.jpg","full":{"fluid":{"src":"/static/45a88f20b208d17dd048a6a13f8ab8db/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/nodejs-httpserver","title":"如何使用NodeJs创建HTTP服务？","timeToRead":1}},{"node":{"date":"2021-08-11","excerpt":"nodejs-eventloop","hero":{"relativeDirectory":"nodejs/eventloop","publicURL":"/static/a6ddce939e497f51980b42202a0b60a1/hero.jpg","full":{"fluid":{"src":"/static/a6ddce939e497f51980b42202a0b60a1/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/nodejs-eventloop","title":"NodeJS 事件循环模型","timeToRead":2}},{"node":{"date":"2021-08-10","excerpt":"nodejs中的内存管理","hero":{"relativeDirectory":"nodejs/buffer","publicURL":"/static/017936315f35195154cc3fa6b26df4b0/hero.jpg","full":{"fluid":{"src":"/static/017936315f35195154cc3fa6b26df4b0/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/nodejs-buffer","title":"Buffer","timeToRead":1}},{"node":{"date":"2021-08-10","excerpt":"目前国内最好的微前端解决方案-qiankun","hero":{"relativeDirectory":"micro-frontend/base","publicURL":"/static/0c73e3002c9bd591cf680fd699ac779d/hero.webp","full":{"fluid":{"src":"/static/0c73e3002c9bd591cf680fd699ac779d/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/micro-frontend-base","title":"微前端解决方案-qiankun","timeToRead":1}},{"node":{"date":"2021-08-04","excerpt":"学一门技术最好的方法就是做一个其玩具版的实现，我们来尝试实现一下react和react-dom最简单版本吧","hero":{"relativeDirectory":"react/mini-react-1","publicURL":"/static/e91f27d09026f73129a734bb2a4dfdb4/hero.webp","full":{"fluid":{"src":"/static/e91f27d09026f73129a734bb2a4dfdb4/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/react-mini-react-1","title":"React Mini版实现(1)","timeToRead":1}},{"node":{"date":"2021-08-04","excerpt":"brew 是 MacOS 上的包管理工具，可以简化 macOS 和 Linux 操作系统上软件的安装。","hero":{"relativeDirectory":"other/brew","publicURL":"/static/070585a6f638ce720bd32615ca3367df/hero.webp","full":{"fluid":{"src":"/static/070585a6f638ce720bd32615ca3367df/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/other-brew","title":"brew安装","timeToRead":1}},{"node":{"date":"2021-08-01","excerpt":"CommonJS我们经常用，如何实现一个简易版的commonJS呢？","hero":{"relativeDirectory":"nodejs/cjs-implementation","publicURL":"/static/991936a3b8b51ef026a0521a571df3c1/hero.webp","full":{"fluid":{"src":"/static/991936a3b8b51ef026a0521a571df3c1/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/nodejs-cjs-implementation","title":"CommonJS简易版实现","timeToRead":1}},{"node":{"date":"2021-07-30","excerpt":"一个极品透明Dashboard样式分享","hero":{"relativeDirectory":"css/dashboard1","publicURL":"/static/f79286a9104b509b44687fec1a04474c/hero.jpg","full":{"fluid":{"src":"/static/f79286a9104b509b44687fec1a04474c/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/dashboard1","title":"极品透明Dashboard样式分享","timeToRead":1}},{"node":{"date":"2021-07-11","excerpt":"nodejs中的流","hero":{"relativeDirectory":"nodejs/stream","publicURL":"/static/d7c1fe8b887de960367f0f41a92c88e7/hero.jpg","full":{"fluid":{"src":"/static/d7c1fe8b887de960367f0f41a92c88e7/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/nodejs-stream","title":"Stream","timeToRead":1}},{"node":{"date":"2021-05-18","excerpt":"JavaScript 中有一个特殊的对象，称为全局对象（Global Object），它及其所有属性都可以在程序的任何地方访问，即全局变量。","hero":{"relativeDirectory":"nodejs/global","publicURL":"/static/b301e7df6420cfc6b0c9ff9c77d3bf27/hero.jpg","full":{"fluid":{"src":"/static/b301e7df6420cfc6b0c9ff9c77d3bf27/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/nodejs-global","title":"NodeJS全局对象","timeToRead":1}},{"node":{"date":"2021-05-12","excerpt":"如何快速的部署一个Nodejs服务到公网呢？","hero":{"relativeDirectory":"nodejs/deploy","publicURL":"/static/2623c4de2b78786f1f7a57a07b40d351/hero.webp","full":{"fluid":{"src":"/static/2623c4de2b78786f1f7a57a07b40d351/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/nodejs-deploy","title":"如何部署Nodejs服务","timeToRead":1}},{"node":{"date":"2021-05-11","excerpt":"events模块是node的核心模块之一，几乎所有常用的node模块都继承了events模块，比如http、fs等。","hero":{"relativeDirectory":"nodejs/events","publicURL":"/static/4b7143f06f23c03e859fe398b42a3400/hero.jpg","full":{"fluid":{"src":"/static/4b7143f06f23c03e859fe398b42a3400/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/nodejs-events","title":"Events","timeToRead":1}},{"node":{"date":"2021-04-30","excerpt":"CSS对象新特性，新的background设置方式","hero":{"relativeDirectory":"css/jsbackground","publicURL":"/static/84f511787d995e3083728a9e8d212d56/hero.webp","full":{"fluid":{"src":"/static/84f511787d995e3083728a9e8d212d56/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/jsbackground","title":"用JS绘制背景，让CSS直接使用 'background:paint(xxx)'","timeToRead":1}},{"node":{"date":"2021-04-17","excerpt":"如何使用Nodejs来创建一个TCP/UDP服务?","hero":{"relativeDirectory":"nodejs/createtcp","publicURL":"/static/181c3ee88b5d5673caa3546a656394d6/hero.jpg","full":{"fluid":{"src":"/static/181c3ee88b5d5673caa3546a656394d6/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/nodejs-createtcp","title":"如何使用Nodejs来创建一个TCP/UDP服务?","timeToRead":1}},{"node":{"date":"2021-04-04","excerpt":"程序员经常会有需求，需要列出项目的结构树。Mac或者Linux下可以使用tree列出项目结构","hero":{"relativeDirectory":"other/brewtree","publicURL":"/static/aa9c7dcade395dcf21112f7ae3d32bca/hero.webp","full":{"fluid":{"src":"/static/aa9c7dcade395dcf21112f7ae3d32bca/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/other-brewtree","title":"Mac使用tree生成目录结构","timeToRead":1}},{"node":{"date":"2020-08-14","excerpt":"nodejs-network","hero":{"relativeDirectory":"network/base","publicURL":"/static/75e6497f8b4842a1765bb4de7fa817ad/hero.jpg","full":{"fluid":{"src":"/static/75e6497f8b4842a1765bb4de7fa817ad/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/network-base","title":"Nodejs 网络 & HTTP","timeToRead":1}},{"node":{"date":"2020-08-02","excerpt":"源代码的抽象语法结构的树状表现形式","hero":{"relativeDirectory":"babel/ast","publicURL":"/static/49df9956e4ebbd0008626c6ecb2148e0/hero.webp","full":{"fluid":{"src":"/static/49df9956e4ebbd0008626c6ecb2148e0/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/ast","title":"JavaScript AST 抽象语法树","timeToRead":1}},{"node":{"date":"2020-08-01","excerpt":"在一些场景下我们可能需要一种面向切面的编程方式","hero":{"relativeDirectory":"nodejs/aspect-oriented","publicURL":"/static/d631c4f01f4eaaa2cf3943f2cea3d133/hero.webp","full":{"fluid":{"src":"/static/d631c4f01f4eaaa2cf3943f2cea3d133/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/nodejs-aspect-oriented","title":"nodejs里面向切面编程的一种范式","timeToRead":1}},{"node":{"date":"2020-05-30","excerpt":"AMD、CMD、CJS、ESM","hero":{"relativeDirectory":"js/module","publicURL":"/static/2a07f8584341d5f9d7dabe6f897850ee/hero.webp","full":{"fluid":{"src":"/static/2a07f8584341d5f9d7dabe6f897850ee/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/module","title":"各种JS模块化特性","timeToRead":1}},{"node":{"date":"2020-05-30","excerpt":"使用HMR一步步实现Ajax","hero":{"relativeDirectory":"js/ajax","publicURL":"/static/da224124033530d0cbedaed00d2fa751/hero.jpg","full":{"fluid":{"src":"/static/da224124033530d0cbedaed00d2fa751/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/ajax","title":"手写Ajax实现","timeToRead":null}},{"node":{"date":"2020-04-30","excerpt":"如何自己实现promiseA+规范，手写一个promise实现","hero":{"relativeDirectory":"js/promise","publicURL":"/static/3a2f587817fe6783cac6dcec3da430be/hero.webp","full":{"fluid":{"src":"/static/3a2f587817fe6783cac6dcec3da430be/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/promisea+","title":"手写PromiseA+实现","timeToRead":1}},{"node":{"date":"2020-04-08","excerpt":"nodejs的debug方法","hero":{"relativeDirectory":"js/debugger","publicURL":"/static/90a5f8e8809a4c3f5d72ec2cc3eb5581/hero.webp","full":{"fluid":{"src":"/static/90a5f8e8809a4c3f5d72ec2cc3eb5581/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/js-debugger","title":"debug和内存泄露","timeToRead":1}},{"node":{"date":"2019-06-14","excerpt":"this是在执行时动态读取上下文决定的，不是在定义时决定","hero":{"relativeDirectory":"js/this","publicURL":"/static/ff9eb1f53a7bd4ceefc1a892c1ee8e22/hero.webp","full":{"fluid":{"src":"/static/ff9eb1f53a7bd4ceefc1a892c1ee8e22/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/js-this","title":"this指针、作用域","timeToRead":1}},{"node":{"date":"2019-06-03","excerpt":"使用symbol实","hero":{"relativeDirectory":"js/callbindapply","publicURL":"/static/d96c0a9466e8ff1a7d6018f2e74b9673/hero.jpg","full":{"fluid":{"src":"/static/d96c0a9466e8ff1a7d6018f2e74b9673/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/callapplybind","title":"call、apply、bind的极简实现","timeToRead":1}},{"node":{"date":"2019-04-30","excerpt":"对于列表，在有些时候针对于不同个数的item会有不同的显示，比如col份数，用js固然可以，是否可以用css更简便的实现呢？","hero":{"relativeDirectory":"css/liststyle","publicURL":"/static/2de9194ac8a77d606ad2479a72c084e8/hero.jpg","full":{"fluid":{"src":"/static/2de9194ac8a77d606ad2479a72c084e8/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/liststyle","title":"CSS联合选择器区分列表元素个数不同所要求的不同样式","timeToRead":1}},{"node":{"date":"2019-04-30","excerpt":"介绍TypeScript基础知识","hero":{"relativeDirectory":"ts","publicURL":"/static/6428135d0eff7019e33260208ae9fa4a/hero.webp","full":{"fluid":{"src":"/static/6428135d0eff7019e33260208ae9fa4a/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/tsbase","title":"TypeScript基础","timeToRead":1}},{"node":{"date":"2019-03-01","excerpt":"关于ES6里的class, 我们有什么不知道的事？","hero":{"relativeDirectory":"js/es6class","publicURL":"/static/5289ce0a6c0371fd9aa3ef9bd40739b7/hero.webp","full":{"fluid":{"src":"/static/5289ce0a6c0371fd9aa3ef9bd40739b7/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/jses6class","title":"ES6之Class","timeToRead":1}},{"node":{"date":"2019-02-17","excerpt":"HTTP协议（HyperText Transfer Protocol，超文本传输协议）是用于从WWW服务器传输超文本到本地浏览器的传输协议","hero":{"relativeDirectory":"network/http","publicURL":"/static/bd166ee2d26ae63291b582d2e41d1e50/hero.jpg","full":{"fluid":{"src":"/static/bd166ee2d26ae63291b582d2e41d1e50/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/network-http","title":"HTTP详解","timeToRead":2}},{"node":{"date":"2019-01-30","excerpt":"使用各9行代码实现节流和防抖函数","hero":{"relativeDirectory":"js/debounce","publicURL":"/static/92a7eb17ec6b152efde92688b0143ed9/hero.jpg","full":{"fluid":{"src":"/static/92a7eb17ec6b152efde92688b0143ed9/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/debounce","title":"极简代码实现节流Throttle和防抖Debounce","timeToRead":1}},{"node":{"date":"2018-08-14","excerpt":"POST和GET区别是什么呢？","hero":{"relativeDirectory":"network/postget","publicURL":"/static/e0c491c38c666fa147ac35621cbe5dea/hero.webp","full":{"fluid":{"src":"/static/e0c491c38c666fa147ac35621cbe5dea/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/network-postget","title":"POST和GET区别","timeToRead":1}},{"node":{"date":"2017-06-14","excerpt":"http1.1和http2.0有什么区别","hero":{"relativeDirectory":"network/httpdifference","publicURL":"/static/6e94ddf3f3f26ac8b624cfff9df4deb2/hero.jpg","full":{"fluid":{"src":"/static/6e94ddf3f3f26ac8b624cfff9df4deb2/59538/hero.jpg","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/network-httpdifference","title":"http1.1和http2.0有什么区别","timeToRead":1}},{"node":{"date":"2017-01-10","excerpt":"咱们来手写实现一个EventEmitter事件巴士","hero":{"relativeDirectory":"nodejs/event-emitter","publicURL":"/static/08268660943185a44ec3f950c17d7205/hero.webp","full":{"fluid":{"src":"/static/08268660943185a44ec3f950c17d7205/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/nodejs-event-emitter","title":"手写EventEmitter事件巴士","timeToRead":1}},{"node":{"date":"2016-05-08","excerpt":"对象是什么？为什么要面向对象？","hero":{"relativeDirectory":"js/oop","publicURL":"/static/44a4c2abeff5d8e9b3f8e88863c1cdb5/hero.webp","full":{"fluid":{"src":"/static/44a4c2abeff5d8e9b3f8e88863c1cdb5/d9b14/hero.webp","sizes":"(max-width: 150px) 100vw, 150px"}}},"slug":"/js-oop","title":"OOP 面向对象编程","timeToRead":1}}]}}}